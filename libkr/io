# kairrer 0.0.7

asm:{
    return:** @code **
}

print:{                   // фунция выводит текст из полученного зарезирвированным именем ("argument")
     __echo "@argument"__
}


exit:{                     // функция, завершает всю программу
    ..
        48 C7 C0 3C 00 00 00   
        48 C7 C7 2A 00 00 00   
        0F 05   
    .. ;                  // машинный код
}

fwrite:{                   // функция, открывает файл для записи
    
    filename;             // подсказка используемых переменных, для потребителей
    return: **

        rax : 0b10;
        rdi : '@filename';
        rsi : 0x241;
        rdx : 0o644;
    
    **;                   // рузультат ассемблерского кода возвращается зарезирвированным именем ("return") переменных, для функции 
    # < filename ;        // удаляем переменую которую мы получили для поддержки гигиены, чтобы нельзя было ее извлечь из этой функции
}

fread:{                   // функция, открывает файл для чтения
    
    filename;             // подсказка используемых переменных, для потребителей
    return: **

        rax : 0b10;
        rdi : '@filename';
        rsi : 0b0;
     
    
    **;                   // рузультат ассемблерского кода возвращается зарезирвированным именем ("return") переменных, для функции 
    # < filename ;        // удаляем переменую которую мы получили для поддержки гигиены, чтобы нельзя было ее извлечь из этой функции
}

fclose:{                  // функция, закрывает файл

    desc;                 // подсказка используемых переменных, для потребителей
    return: **

        rax : 3;
        rdi : @desc;
    
    **                    // рузультат ассемблерского кода возвращается зарезирвированным именем ("return") переменных, для функции 
    # < desc;             // удаляем переменую которую мы получили для поддержки гигиены, чтобы нельзя было ее извлечь из этой функции

}